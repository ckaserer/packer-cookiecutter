
#############################
# Required settings
#############################

#######
# auth or authconfig (optional)
#######
# Sets up the authentication options for the system using the authconfig command, which can also be run on the command line after the installation finishes. See the authconfig(8) manual page and the authconfig --help command for more details. Passwords are shadowed by default.

# -enablenis - Turns on NIS support. By default, --enablenis uses whatever domain it finds on the network. A domain should almost always be set by hand with the --nisdomain= option.
# -nisdomain= - NIS domain name to use for NIS services.
# -nisserver= - Server to use for NIS services (broadcasts by default).
# -useshadow or --enableshadow - Use shadow passwords.
# -enableldap - Turns on LDAP support in /etc/nsswitch.conf, allowing your system to retrieve information about users (for example, their UIDs, home directories, and shells) from an LDAP directory. To use this option, you must install the nss-pam-ldapd package. You must also specify a server and a base DN (distinguished name) with --ldapserver= and --ldapbasedn=.
# -enableldapauth - Use LDAP as an authentication method. This enables the pam_ldap module for authentication and changing passwords, using an LDAP directory. To use this option, you must have the nss-pam-ldapd package installed. You must also specify a server and a base DN with --ldapserver= and --ldapbasedn=. If your environment does not use TLS (Transport Layer Security), use the --disableldaptls switch to ensure that the resulting configuration file works.
# -ldapserver= - If you specified either --enableldap or --enableldapauth, use this option to specify the name of the LDAP server to use. This option is set in the /etc/ldap.conf file.
# -ldapbasedn= - If you specified either --enableldap or --enableldapauth, use this option to specify the DN in your LDAP directory tree under which user information is stored. This option is set in the /etc/ldap.conf file.
# -enableldaptls - Use TLS (Transport Layer Security) lookups. This option allows LDAP to send encrypted user names and passwords to an LDAP server before authentication.
# -disableldaptls - Do not use TLS (Transport Layer Security) lookups in an environment that uses LDAP for authentication.
# -enablekrb5 - Use Kerberos 5 for authenticating users. Kerberos itself does not know about home directories, UIDs, or shells. If you enable Kerberos, you must make users' accounts known to this workstation by enabling LDAP, NIS, or Hesiod or by using the useradd command. If you use this option, you must have the pam_krb5 package installed.
# -krb5realm= - The Kerberos 5 realm to which your workstation belongs.
# -krb5kdc= - The KDC (or KDCs) that serve requests for the realm. If you have multiple KDCs in your realm, use a comma-separated list without spaces.
# -krb5adminserver= - The KDC in your realm that is also running kadmind. This server handles password changing and other administrative requests. This server must be run on the master KDC if you have more than one KDC.
# -enablehesiod - Enables Hesiod support for looking up user home directories, UIDs, and shells. More information on setting up and using Hesiod on your network is in /usr/share/doc/glibc-2.x.x/README.hesiod, which is included in the glibc package. Hesiod is an extension of DNS that uses DNS records to store information about users, groups, and various other items.
# -hesiodlhs and --hesiodrhs - The Hesiod LHS (left-hand side) and RHS (right-hand side) values, set in /etc/hesiod.conf. The Hesiod library uses these values to search DNS for a name, similar to the way that LDAP uses a base DN.
# o look up user information for the user name jim, the Hesiod library looks up jim.passwdLHSRHS, which should resolve to a TXT record that contains a string identical to an entry for that user in the passwd file: jim:*:1001:1001:Jungle Jim:/home/jim:/bin/bash. To look up groups, the Hesiod library looks up jim.groupLHSRHS instead.
# o look up users and groups by number, make 1001.uid a CNAME for jim.passwd, and 1001.gid a CNAME for jim.group. Note that the library does not place a period (.) in front of the LHS and RHS values when performing a search. Therefore, if the LHS and RHS values need to have a period placed in front of them, you must include the period in the values you set for --hesiodlhs and --hesiodrhs.
# -enablesmbauth - Enables authentication of users against an SMB server (typically a Samba or Windows server). SMB authentication support does not know about home directories, UIDs, or shells. If you enable SMB, you must make users' accounts known to the workstation by enabling LDAP, NIS, or Hesiod or by using the useradd command.
# -smbservers= - The name of the servers to use for SMB authentication. To specify more than one server, separate the names with commas (,).
# -smbworkgroup= - The name of the workgroup for the SMB servers.
# -enablecache - Enables the nscd service. The nscd service caches information about users, groups, and various other types of information. Caching is especially helpful if you choose to distribute information about users and groups over your network using NIS, LDAP, or Hesiod.
# --passalgo= - Specify sha256 to set up the SHA-256 hashing algorithm or sha512 to set up the SHA-512 hashing algorithm.
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
auth --enableshadow --passalgo=sha512 --kickstart

#######
# bootloader (required)
#######
# Specifies how the boot loader should be installed.
# Important: Device names in the sdX (or /dev/sdX) format are not guaranteed to be consistent across reboots, which can complicate usage of some Kickstart commands. When a command calls for a device node name, you can instead use any item from /dev/disk. For example, instead of:
#   part / --fstype=xfs --onpart=sda1
# You could use an entry similar to one of the following:
#   part / --fstype=xfs --onpart=/dev/disk/by-path/pci-0000:00:05.0-scsi-0:0:0:0-part1
#   part / --fstype=xfs --onpart=/dev/disk/by-id/ata-ST3160815AS_6RA0C882-part1
# This way the command will always target the same storage device. This is especially useful in large storage environments. See the chapter about persistent storage device naming in the Red Hat Enterprise Linux 7 Storage Administration Guide for more in-depth information about different ways to consistently refer to storage devices.
# Note: In some cases, a special partition is required to install the boot loader on 64-bit AMD, Intel, and ARM systems. The type and size of this partition depends on whether the disk you are installing the boot loader to uses the Master Boot Record (MBR) or a GUID Partition Table (GPT) schema.

# --append= - Specifies additional kernel parameters. To specify multiple parameters, separate them with spaces. For example:
#   bootloader --location=mbr --append="hdd=ide-scsi ide=nodma"
#   The rhgb and quiet parameters are always used, even if you do not specify them here or do not use the --append= command at all.
#   This option is useful for disabling mechanisms which were implemented to mitigate the Meltdown and Spectre speculative execution vulnerabilities found in most modern processors (CVE-2017-5754, CVE-2017-5753, and CVE-2017-5715). In some cases, these mechanisms may be unnecessary, and keeping them enabled causes decreased performance with no improvement in security. To disable these mechanisms, add the options to do so into your Kickstart file - for example, bootloader --append="nopti noibrs noibpb" on AMD64/Intel 64 systems.
# --boot-drive= - Specifies which drive the boot loader should be written to, and therefore which drive the computer will boot from. If you use a multipath device as the boot drive, specify only one member of the device.
# --leavebootorder - The installer will add Red Hat Enterprise Linux 7 to the top of the list of installed systems in the boot loader, and preserve all existing entries as well as their order.
# --driveorder= - Specifies which drive is first in the BIOS boot order. For example:
#   bootloader --driveorder=sda,hda
# --location= - Specifies where the boot record is written. Valid values are the following:
#   mbr - The default option. Depends on whether the drive uses the Master Boot Record (MBR) or GUID Partition Table (GPT) scheme:
#     On a GPT-formatted disk, this option installs stage 1.5 of the boot loader into the BIOS boot partition.
#     On an MBR-formatted disk, stage 1.5 is installed into the empty space between the MBR and the first partition.
#   partition - Install the boot loader on the first sector of the partition containing the kernel.
#     none - Do not install the boot loader.
#     In most cases, this option does not need to be specified.
# --password= - If using GRUB2, sets the boot loader password to the one specified with this option. This should be used to restrict access to the GRUB2 shell, where arbitrary kernel options can be passed.
# If a password is specified, GRUB2 also asks for a user name. The user name is always root.
# --iscrypted - Normally, when you specify a boot loader password using the --password= option, it is stored in the Kickstart file in plain text. If you want to encrypt the password, use this option and an encrypted # password.
#   To generate an encrypted password, use the grub2-mkpasswd-pbkdf2 command, enter the password you want to use, and copy the command's output (the hash starting with grub.pbkdf2) into the Kickstart file. An example #   bootloader Kickstart entry with an encrypted password looks similar to the following:
#     bootloader --iscrypted --password=grub.pbkdf2.sha512.10000.5520C6C9832F3AC3D149AC0B24BE69E2D4FB0DBEEDBD29CA1D30A044DE2645C4C7A291E585D4DC43F8A4D82479F8B95CA4BA4381F8550510B75E8E0BB2938990.C688B6F0EF935701FF9BD1A8EC7FE5BD2333799C98F28420C5CC8F1A2A233DE22C83705BB614EA17F3FDFDF4AC2161CEA3384E56EB38A2E39102F5334C47405E
# --timeout= - Specifies the amount of time the boot loader waits before booting the default option (in seconds).
# --default= - Sets the default boot image in the boot loader configuration.
# --extlinux - Use the extlinux boot loader instead of GRUB2. This option only works on systems supported by extlinux.
# --disabled — This option is a stronger version of --location=none. While --location=none simply disables boot loader installation, --disabled disables boot loader installation and also disables installation of the package containing the boot loader, thus saving space.
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
bootloader --location=mbr

#######
# lang (required)
#######
# Sets the language to use during installation and the default language to use on the installed system. For example, to set the language to English, the Kickstart file should contain the following line:
#   lang en_US
# The file /usr/share/system-config-language/locale-list provides a list of the valid language codes in the first column of each line and is part of the system-config-language package.
# Certain languages (for example, Chinese, Japanese, Korean, and Indic languages) are not supported during text-mode installation. If you specify one of these languages with the lang command, the installation process continues in English, but the installed system uses your selection as its default language.

# --addsupport= - Add support for additional languages. Takes the form of comma-separated list without spaces. For example:
#   lang en_US --addsupport=cs_CZ,de_DE,en_UK
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
lang en_US.UTF-8 --addsupport=de_DE.UTF-8

#######
# keyboard (required)
#######
# Sets one or more available keyboard layouts for the system.

# --vckeymap= - Specify a VConsole keymap which should be used. Valid names correspond to the list of files in the /usr/lib/kbd/keymaps/ directory, without the .map.gz extension.
# --xlayouts= - Specify a list of X layouts that should be used as a comma-separated list without spaces. Accepts values in the same format as setxkbmap(1), either in the layout format (such as cz), or in the layout (variant) format (such as cz (qwerty)).
# All available layouts can be viewed on the xkeyboard-config(7) man page under Layouts.
# --switch= - Specify a list of layout-switching options (shortcuts for switching between multiple keyboard layouts). Multiple options must be separated by commas without spaces. Accepts values in the same format as setxkbmap(1).

# Available switching options can be viewed on the xkeyboard-config(7) man page under Options.
# The following example sets up two keyboard layouts (English (US) and Czech (qwerty)) using the --xlayouts= option, and allows to switch between them using Alt+Shift:
#   keyboard --xlayouts=us,'cz (qwerty)' --switch=grp:alt_shift_toggle
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
keyboard de_DE

#######
# rootpw (required)
#######
# Sets the system's root password to the password argument.
# rootpw [--iscrypted|--plaintext] [--lock] password
# --iscrypted - If this option is present, the password argument is assumed to already be encrypted. This option is mutually exclusive with --plaintext. To create an encrypted password, you can use python:
#   $ python -c 'import crypt,getpass;pw=getpass.getpass();print(crypt.crypt(pw) if (pw==getpass.getpass("Confirm: ")) else exit())'
#   This generates a sha512 crypt-compatible hash of your password using a random salt.
# --plaintext - If this option is present, the password argument is assumed to be in plain text. This option is mutually exclusive with --iscrypted.
# --lock - If this option is present, the root account is locked by default. This means that the root user will not be able to log in from the console. This option will also disable the Root Password screens in both the graphical and text-based manual installation.
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
rootpw {{ cookiecutter.root_pw }}

#######
# timezone (required)
#######
# Sets the system time zone to timezone.
#   timezone timezone [options]

# --utc - If present, the system assumes the hardware clock is set to UTC (Greenwich Mean) time.
# --nontp - Disable the NTP service automatic starting.
# --ntpservers= - Specify a list of NTP servers to be used as a comma-separated list without spaces.
# Starting with Red Hat Entrerprise Linux 7.5, time zone names are validated using the pytz.all_timezones list, provided by the pytz package. In previous releases, the names were validated against pytz.common_timezones, which is a subset of the currently used list. Note that the graphical and text mode interfaces still use the more restricted pytz.common_timezones list; you must use a Kickstart file to use additional time zone definitions.
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
timezone Europe/Vienna










#############################
# Optional settings
#############################

#######
# autopart (optional)
#######
# Automatically creates partitions: a root (/) partition (1 GB or larger), a swap partition, and an appropriate /boot partition for the architecture. On large enough drives (50 GB and larger), this also creates a /home partition.
# Important: The autopart option cannot be used together with the part/partition, raid, logvol, or volgroup options in the same Kickstart file.

# --type= - Selects one of the predefined automatic partitioning schemes you want to use. Accepts the following values:
#   lvm: The LVM partitioning scheme.
#   btrfs: The Btrfs partitioning scheme.
#   plain: Regular partitions with no LVM or Btrfs.
#   thinp: The LVM Thin Provisioning partitioning scheme.
# --fstype= - Selects one of the available file system types. The available values are ext2, ext3, ext4, xfs, and vfat. The default file system is xfs. For information about these file systems, see Section 8.14.4.1.1, “File System Types”.
# --nohome - Disables automatic creation of the /home partition.
# --nolvm - Do not use LVM or Btrfs for automatic partitioning. This option is equal to --type=plain.
# --encrypted - Encrypts all partitions. This is equivalent to checking the Encrypt partitions check box on the initial partitioning screen during a manual graphical installation.
# Note: When encrypting one or more partitions, Anaconda attempts to gather 256 bits of entropy to ensure the partitions are encrypted securely. Gathering entropy can take some time - the process will stop after a maximum of 10 minutes, regardless of whether sufficient entropy has been gathered.
# The process can be sped up by interacting with the installation system (typing on the keyboard or moving the mouse). If you are installing in a virtual machine, you can also attach a virtio-rng device (a virtual random number generator) to the guest as described in the Red Hat Enterprise Linux 7 Virtualization Deployment and Administration Guide.
# --passphrase= - Provides a default system-wide passphrase for all encrypted devices.
# --escrowcert=URL_of_X.509_certificate - Stores data encryption keys of all encrypted volumes as files in /root, encrypted using the X.509 certificate from the URL specified with URL_of_X.509_certificate. The keys are stored as a separate file for each encrypted volume. This option is only meaningful if --encrypted is specified.
# --backuppassphrase - Adds a randomly-generated passphrase to each encrypted volume. Store these passphrases in separate files in /root, encrypted using the X.509 certificate specified with --escrowcert. This option is only meaningful if --escrowcert is specified.
# --cipher= - Specifies the type of encryption to use if the Anaconda default aes-xts-plain64 is not satisfactory. You must use this option together with the --encrypted option; by itself it has no effect. Available types of encryption are listed in the Red Hat Enterprise Linux 7 Security Guide, but Red Hat strongly recommends using either aes-xts-plain64 or aes-cbc-essiv:sha256.
# Note: It is recommended to use the autopart --nohome Kickstart option when installing on a single FBA DASD of the CMS type. This ensures that the installer does not create a separate /home partition. The installation then proceeds successfully.
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
autopart --nolvm

#######
# clearpart (optional)
#######
# Removes partitions from the system, prior to creation of new partitions. By default, no partitions are removed.
# Important: Device names in the sdX (or /dev/sdX) format are not guaranteed to be consistent across reboots, which can complicate usage of some Kickstart commands. When a command calls for a device node name, you can instead use any item from /dev/disk. For example, instead of:
#   part / --fstype=xfs --onpart=sda1
# You could use an entry similar to one of the following:
#   part / --fstype=xfs --onpart=/dev/disk/by-path/pci-0000:00:05.0-scsi-0:0:0:0-part1
#   part / --fstype=xfs --onpart=/dev/disk/by-id/ata-ST3160815AS_6RA0C882-part1
# This way the command will always target the same storage device. This is especially useful in large storage environments. See the chapter about persistent storage device naming in the Red Hat Enterprise Linux 7 Storage Administration Guide for more in-depth information about different ways to consistently refer to storage devices.
# Note: If the clearpart command is used, then the part --onpart command cannot be used on a logical partition.
# For a detailed example of partitioning including the clearpart command, see Section 26.4.1, “Advanced Partitioning Example”.
# --all - Erases all partitions from the system.
# Warning: This option will erase all disks which can be reached by the installer, including any attached network storage. Use this option with caution.
# You can prevent clearpart from wiping storage you want to preserve by using the --drives= option and specifying only the drives you want to clear, by attaching network storage later (for example, in the %post section of the Kickstart file), or by blacklisting the kernel modules used to access network storage.
# --drives= - Specifies which drives to clear partitions from. For example, the following clears all the partitions on the first two drives on the primary IDE controller:
#   clearpart --drives=hda,hdb --all
# To clear a multipath device, use the format disk/by-id/scsi-WWID, where WWID is the world-wide identifier for the device. For example, to clear a disk with WWID 58095BEC5510947BE8C0360F604351918, use:
#   clearpart --drives=disk/by-id/scsi-58095BEC5510947BE8C0360F604351918
# This format is preferable for all multipath devices, but if errors arise, multipath devices that do not use logical volume management (LVM) can also be cleared using the format disk/by-id/dm-uuid-mpath-WWID, where WWID is the world-wide identifier for the device. For example, to clear a disk with WWID 2416CD96995134CA5D787F00A5AA11017, use:
#  clearpart --drives=disk/by-id/dm-uuid-mpath-2416CD96995134CA5D787F00A5AA11017
# Warning: Never specify multipath devices by device names like mpatha. Device names such as this are not specific to a particular disk. The disk named /dev/mpatha during installation might not be the one that you expect it to be. Therefore, the clearpart command could target the wrong disk.
# --initlabel - Initializes a disk (or disks) by creating a default disk label for all disks in their respective architecture that have been designated for formatting (for example, msdos for x86). Because --initlabel can see all disks, it is important to ensure only those drives that are to be formatted are connected.
# clearpart --initlabel --drives=names_of_disks
# For example:
#   clearpart --initlabel --drives=dasda,dasdb,dasdc
# --list= - Specifies which partitions to clear. This option overrides the --all and --linux options if used. Can be used across different drives. For example:
#   clearpart --list=sda2,sda3,sdb1
# --linux - Erases all Linux partitions.
# --none (default) - Do not remove any partitions.
# Note: Using the clearpart --all command in a Kickstart file to remove all existing partitions during the installation can cause Anaconda to pause and prompt you for a confirmation in certain cases. If you need to perform the installation automatically with no interaction, add the zerombr command to your Kickstart file.
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
clearpart --all --initlabel

#######
# eula (optional)
#######
# Use this option to accept the End User License Agreement (EULA) without user interaction. 
# Specifying this option prevents Initial Setup from prompting you to accept the license agreement after you finish the installation and reboot the system for the first time. 

# --agreed (required) - Accept the EULA. This option must always be used, otherwise the eula command is meaningless.
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
eula --agreed

#######
# firewall (optional)
#######
# Specify the firewall configuration for the installed system.
#   firewall --enabled|--disabled device [options]
# --enabled or --enable - Reject incoming connections that are not in response to outbound requests, such as DNS replies or DHCP requests. If access to services running on this machine is needed, you can choose to allow specific services through the firewall.
# --disabled or --disable - Do not configure any iptables rules.
# --trust= - Listing a device here, such as em1, allows all traffic coming to and from that device to go through the firewall. To list more than one device, use --trust em1 --trust em2. Do NOT use a comma-separated format such as --trust em1, em2.
# incoming - Replace with one or more of the following to allow the specified services through the firewall.
#  --ssh
#  --smtp
#  --http
#  --ftp
# --port= - You can specify that ports be allowed through the firewall using the port:protocol format. For example, to allow IMAP access through your firewall, specify imap:tcp. Numeric ports can also be specified explicitly; for example, to allow UDP packets on port 1234 through, specify 1234:udp. To specify multiple ports, separate them by commas.
# --service= - This option provides a higher-level way to allow services through the firewall. Some services (like cups, avahi, and so on.) require multiple ports to be open or other special configuration in order for the service to work. You can specify each individual port with the --port option, or specify --service= and open them all at once.
# Valid options are anything recognized by the firewall-offline-cmd program in the firewalld package. If firewalld is running, firewall-cmd --get-services provides a list of known service names.
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
firewall --disabled

#######
# firstboot (optional)
#######
# Determine whether the Initial Setup application starts the first time the system is booted. If enabled, the initial-setup package must be installed. If not specified, this option is disabled by default.

# --enable or --enabled - Initial Setup is started the first time the system boots.
# --disable or --disabled - Initial Setup is not started the first time the system boots.
# --reconfig - Enable the Initial Setup to start at boot time in reconfiguration mode. This mode enables the language, mouse, keyboard, root password, security level, time zone and networking configuration options in addition to the default ones.
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
firstboot --disabled

#######
#install (optional)
#######
# The default installation mode. You must specify the type of installation from cdrom, harddrive, nfs, liveimg, or url (for FTP, HTTP, or HTTPS installations). The install command and the installation method command must be on separate lines. For example:
#   install
#   liveimg --url=file:///images/install/squashfs.img --noverifyssl
# cdrom - Install from the first optical drive on the system.
# harddrive - Install from a Red Hat installation tree or full installation ISO image on a local drive. The drive must contain a file system the installation program can mount: ext2, ext3, ext4, vfat, or xfs.
#   --biospart= - BIOS partition to install from (such as 82).
#   --partition= - Partition to install from (such as sdb2).
#   --dir= - Directory containing the variant directory of the installation tree, or the ISO image of the full installation DVD.
# For example:
#   harddrive --partition=hdb2 --dir=/tmp/install-tree
# liveimg - Install from a disk image instead of packages. The image can be the squashfs.img file from a live ISO image, a compressed tar file (.tar, .tbz, .tgz, .txz, .tar.bz2, .tar.gz, or .tar.xz.), or any file system that the installation media can mount. Supported file systems are ext2, ext3, ext4, vfat, and xfs.
# Note: When using the liveimg installation mode with a driver disk, drivers on the disk will not automatically be included in the installed system. If necessary, these drivers should be installed manually, or in the %post section of a kickstart script.
#  --url= - The location to install from. Supported protocols are HTTP, HTTPS, FTP, and file.
#  --proxy= - Specify an HTTP, HTTPS or FTP proxy to use while performing the installation.
#  --checksum= - An optional argument with the SHA256 checksum of the image file, used for verification.
#  --noverifyssl - Disable SSL verification when connecting to an HTTPS server.
# For example:
#   liveimg --url=file:///images/install/squashfs.img --checksum=03825f567f17705100de3308a20354b4d81ac9d8bed4bb4692b2381045e56197 --noverifyssl
# nfs - Install from the NFS server specified.
#   --server= - Server from which to install (host name or IP).
#   --dir= - Directory containing the variant directory of the installation tree.
#   --opts= - Mount options to use for mounting the NFS export. (optional)
# For example:
#   nfs --server=nfsserver.example.com --dir=/tmp/install-tree
# url - Install from an installation tree on a remote server using FTP, HTTP, or HTTPS.
#  --url= - The location to install from. Supported protocols are HTTP, HTTPS, FTP, and file.
#  --mirrorlist= - The mirror URL to install from.
#  --proxy= - Specify an HTTP, HTTPS or FTP proxy to use while performing the installation.
#  --noverifyssl - Disable SSL verification when connecting to an HTTPS server.
# For example:
#   url --url http://server/path
# or:
#   url --url ftp://username:password@server/path
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
install
cdrom

#######
# network (optional)
#######
# Configures network information for the target system and activates network devices in the installation environment. 
# The device specified in the first network command is activated automatically. 
# Activation of the device can be also explicitly required by the --activate option.
# More configuration options can be found here:
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
network --bootproto=dhcp

#######
# reboot (optional)
#######
# Reboot after the installation is successfully completed (no arguments). Normally, kickstart displays a message and waits for the user to press a key before rebooting.
# The reboot option is equivalent to the shutdown -r command.
# Specify reboot to automate installation fully when installing in command line mode on IBM Z.
# For other completion methods, see the halt, poweroff, and shutdown Kickstart options.
# The halt option is the default completion method if no other methods are explicitly specified in the Kickstart file.
# Note: Use of the reboot option might result in an endless installation loop, depending on the installation media and method.
# --eject - Attempt to eject the bootable media (DVD, USB, or other media) before rebooting.
# --kexec - Uses the kexec system call instead of performing a full reboot, which immediately loads the installed system into memory, bypassing the hardware initialization normally performed by the BIOS or firmware.
# Important: Due to the complexities involved with booting systems using kexec, it cannot be explicitly tested and guaranteed to function in every situation.
# When kexec is used, device registers (which would normally be cleared during a full system reboot) might stay filled with data, which could potentially create issues for some device drivers.
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
reboot

#######
# selinux (optional)
#######
# Sets the state of SELinux on the installed system. SELinux defaults to enforcing in anaconda.
# selinux [--disabled|--enforcing|--permissive]
# --enforcing - Enables SELinux with the default targeted policy being enforcing.
# --permissive - Outputs warnings based on the SELinux policy, but does not actually enforce the policy.
# --disabled - Disables SELinux completely on the system.
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
selinux --permissive

#######
# services (optional)
#######
# Modifies the default set of services that will run under the default runlevel. 
# The list of disabled services is processed before the list of enabled services. 
# Therefore, if a service appears on both lists, it is enabled.
# --disabled — Disable the services given in the comma separated list.
# --enabled — Enable the services given in the comma separated list.
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
services --enabled=NetworkManager,sshd

#######
# skipx (optional)
#######
# If present, X is not configured on the installed system.
# Note: If you install a display manager among your package selection options, this package creates an X configuration, and the installed system defaults to graphical.target. The effect of the skipx option is overridden.
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
skipx

#######
# text (optional)
#######
# Perform the kickstart installation in text mode. 
# Kickstart installations are performed in graphical mode by default.
# Important: If you select text mode for a kickstart installation, 
#   make sure that you specify choices for the partitioning, bootloader, and package selection options. 
#   These steps are automated in text mode, and anaconda cannot prompt you for missing information. 
#   If you do not provide choices for these options, anaconda will stop the installation process.
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
text

#######
# unsupported_hardware (optional)
#######
# Tells the installer to suppress the Unsupported Hardware Detected alert. If this command is not included and unsupported hardware is detected, the installation will stall at this alert.
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
unsupported_hardware

#######
# zerombr (optional)
#######
# If zerombr is specified any invalid partition tables found on disks are initialized. This destroys all of the contents of disks with invalid partition tables. This command is required when performing an unattended installation on a system with previously initialized disks.
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
zerombr
